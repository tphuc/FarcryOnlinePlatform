{"version":3,"sources":["static/farcry1.jpg","static/logo4.png","redux/actions/error.js","redux/actions/types.js","redux/actions/auth.js","redux/reducers/settings.js","redux/reducers/auth.js","redux/reducers/errors.js","redux/reducers/tabs.js","redux/store.js","components/Profile.js","components/Keymap.js","components/Setting.js","components/Home.js","components/Navigator.js","redux/actions/tabs.js","components/Sidebar.js","views/Main.js","views/Login.js","views/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","returnErrors","msg","status","type","payload","loadUser","dispatch","getState","axios","get","tokenConfig","then","res","data","catch","err","register","username","email","password","body","JSON","stringify","post","headers","Content-Type","response","token","auth","config","concat","initialState","lazyWeapon","screenBrightness","graphicQuality","playerModel","skinColor","setting","state","arguments","length","undefined","action","Object","objectSpread","defineProperty","varName","value","localStorage","getItem","isAuthenticated","isLoading","user","setItem","removeItem","reducer","selected","combineReducers","error","tabs","store","createStore","applyMiddleware","thunk","theme","createMuiTheme","palette","primary","main","style","label","color","input","ProfileForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitData","new_password","put","id","alert","setState","_this2","react_default","a","createElement","Container","marginTop","ThemeProvider","Typography","TextField","margin","variant","fullWidth","onChange","e","target","Button","onClick","Component","connect","keyActions","Index","settings","document","addEventListener","keyDetector","removeEventListener","paddingBottom","className","map","key","index","onKeyPress","k","StyledSlider","withStyles","thumb","backgroundColor","track","Slider","text","fontFamily","fontWeight","slider","padding","playerClass","hero","merc_scout","merc_rear","evil_worker","mertz","colorSkin","Settings","Row","ingame_name","aria-labelledby","min","max","lazy_weapon","brightness","screen_quality","step","Select","model","OutlinedInput","name","width","keys","player_skin","val","inputProps","ind","MenuItem","btn_right","position","right","bottom","game_logo","transform","getMatches","matches","match","i","getFragsFromMatch","match_id","obj","frags","getFrags","console","log","Col","xs","md","lg","xl","perspective","boxShadow","Image","src","farcryLogo","marginLeft","Accordion","ActiveKey","Card","Toggle","as","eventKey","Collapse","Body","start_time","end_time","Table","striped","bordered","hover","frag","frag_time","killer","victim","weapon_code","handleLogout","preventDefault","require","PythonShell","run","Navbar","fixed","borderWidth","borderRadius","react_fontawesome_index_es","icon","faGamepad","selectTab","tabname","tabIcons","faHome","faUser","faCog","faKeyboard","useStyles","root","display","title","height","appBar","item","drawer","drawerPaper","window","location","href","classes","Drawer","paper","anchor","Nav","Link","logo","fluid","Divider","List","ListItem","button","ListItemText","alignItems","justifyContent","border","faSignOutAlt","sm","Sidebar","components_Navigator","Home","Profile","Setting","Keymap","react_router","to","maxWidth","errors","helperText","autoComplete","block","handleRegister","confirm_password","alerts","Alert","show","dismissible","closeLabel","onClose","showAlert","App","componentDidMount","react_router_dom","path","component","Login","exact","Main","Signup","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","es","src_App_0","getElementById","URL","process","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2baadd26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/farcry1.e14bc1c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo4.cea7c7f1.png\";","import { GET_ERRORS, CREATE_MESSAGES } from '../actions/types';\n\nexport const createMessages = (msg) => {\n    return {\n        type: CREATE_MESSAGES,\n        payload: msg\n    }\n}\n\nexport const returnErrors = (msg, status) => {\n    return {\n        type: GET_ERRORS,\n        payload:{\n            msg, status\n        }\n    }\n}","// SETTING\nexport const SET_SLIDER_VALUE = 'SET_SLIDER_VALUE'\n\n// USER\n\nexport const USER_CREATE = 'USER_CREATE'\nexport const USER_DELETE = 'USER_DELETE'\nexport const USER_LOADING = 'USER_LOADING'\nexport const USER_LOADED = 'USER_LOADED'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\n// AUTHENTICATE\nexport const AUTH_ERROR = 'AUTH_ERROR'\n\n// LOGIN / LOGOUT\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\n\n// REGISTER\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const REGISTER_FAILED = 'REGISTER_FAILED'\n\n// EXCEPTION\nexport const EXCEPTION = 'EXCEPTION'\n\n// ERROR\nexport const GET_ERRORS = 'GET_ERRORS'\n\n//MESSAGES\nexport const CREATE_MESSAGES = 'CREATE_MESSAGES'\n\n//TABS\nexport const SELECT_TAB = 'SELECT_TAB'","import axios from 'axios';\nimport {returnErrors} from './error'\n\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAILED, EXCEPTION, USER_LOGOUT, REGISTER_FAILED, REGISTER_SUCCESS } from './types';\n\nexport const loadUser = () => (dispatch, getState) => {\n\n    // User Loading\n    dispatch({ type: USER_LOADING });\n\n    axios\n        .get(\"http://localhost:8000/api/auth/user\", tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: USER_LOADED,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch({\n                type: AUTH_ERROR\n            });\n        });\n};\n\n// LOGIN USER\nexport const login = (username, password) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    // Request Body\n    const body = JSON.stringify({ username, password });\n\n    axios\n        .post(\"http://localhost:8000/api/auth/login\", body, config)\n        .then(res => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n        })\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: LOGIN_FAILED\n            });\n        });\n};\n\n\nexport const logout = () => (dispatch, getState) => {\n    axios\n        .post(\"http://localhost:8000/api/auth/logout/\", null, tokenConfig(getState))\n        .then(res => {\n            dispatch({\n                type: USER_LOGOUT\n            });\n        })\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({type: EXCEPTION});\n        });\n};\n\nexport const register = ( username, email, password ) => dispatch => {\n    // Headers\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    // Request Body\n    const body = JSON.stringify({ username, email, password });\n\n    axios\n      .post(\"/api/auth/register\", body, config)\n      .then(res => {\n        dispatch({\n          type: REGISTER_SUCCESS,\n          payload: res.data\n        });\n      })\n      .catch(err => {\n        dispatch(returnErrors(err.response.data, err.response.status));\n        dispatch({\n            type: REGISTER_FAILED\n        });\n      })\n\n  };\n\nexport const tokenConfig = getState => {\n    // Get token from state\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    // If token, add to headers config\n    if (token) {\n        config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n\n    return config;\n};\n","import * as types from '../actions/types'\n\nconst initialState = {\n    lazyWeapon : 1,\n    screenBrightness : 1,\n    graphicQuality : 3,\n    playerModel : 'Jack',\n    skinColor : 2,\n}\n\n\nconst setting = (state = initialState, action) => {\n\n    switch(action.type){\n\n        case types.SET_SLIDER_VALUE:\n            return{\n                ...state,\n                [action.payload.varName] : action.payload.value,\n            }\n\n        default :\n            return state\n    }\n}\n\nexport default setting;","import * as types from '../actions/types'\n\nconst initialState = {\n    token : localStorage.getItem('token'),\n    isAuthenticated : null,\n    isLoading : false,\n    user : null,\n}\n\nconst auth = (state = initialState, action) => {\n\n    switch(action.type){\n        case types.USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n\n        case types.USER_LOADED:\n            return {\n                ...state,\n                isLoading: false,\n                isAuthenticated: true,\n                user: action.payload\n            };\n\n        case types.REGISTER_SUCCESS:\n        case types.LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n            };\n        \n        \n        case types.USER_LOGOUT:\n        case types.LOGOUT_SUCCESS:\n        case types.LOGIN_FAILED:\n        case types.AUTH_ERROR:\n        case types.REGISTER_FAILED:\n        localStorage.removeItem('token');\n        return {\n            ...state,\n            token: null,\n            user: null,\n            isAuthenticated: null,\n            isLoading: false\n        };\n            \n            \n        default:\n            return state\n    }\n}\n\nexport default auth;","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {\n    msg : {},\n    status : null,\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg : action.payload.msg,\n                status : action.payload.status\n            }\n        default:\n            return state;\n    }\n\n}\nexport default reducer;","import {SELECT_TAB} from '../actions/types';\n\nconst initialState = {\n    selected : 'profile'\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        case SELECT_TAB:\n            return{\n                ...state,\n                selected: action.payload.selected\n            }\n        default:\n            return state\n    }\n}\nexport default reducer;","import setting from  './reducers/settings';\nimport auth from './reducers/auth';\nimport error from './reducers/errors';\nimport tabs from './reducers/tabs';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk';\n\n\nconst reducer = combineReducers({auth: auth, setting: setting, error: error, tabs: tabs});\nconst store = createStore(reducer, {}, applyMiddleware(thunk));\nexport default store;","import React, { Component } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { TextField, Typography } from '@material-ui/core';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from '@material-ui/styles';\nimport { connect } from 'react-redux';\nimport login from  '../redux/actions/auth';\nimport store from '../redux/store';\nimport axios from 'axios';\n\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00838f'\n        },\n        type: \"dark\"\n    }\n});\n\nconst style = {\n    label: {\n        color: \"#eeeeee\"\n    },\n    input: {\n        color: '#dddddd'\n    }\n}\n\n\nconst tokenConfig = () => {\n    const token = store.getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n    if (token) {\n        config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return config;\n};\n\n\n\nclass ProfileForm extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            password : '',\n            new_password : '',\n        }\n    }\n    submitData = (username, password, new_password) => {\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n    \n        axios.post(\"http://localhost:8000/api/auth/login\", JSON.stringify({username, password}), config)\n        .then(res => \n            axios.put(`/api/user/${store.getState().auth.user.id}/profile`, {password: new_password}, tokenConfig())\n            .then(res => alert('Successfully updated'))\n            .then(() => this.setState({password:'', new_password:''}))\n        )\n        .catch(err => alert(\"Why don't you remember your old password? >_>\"))\n    }\n    render() {\n        return (\n            <Container style={{ marginTop: 100 }}>\n                <ThemeProvider theme={theme}>\n                    <Typography style={style.label} >Email address</Typography>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        value={this.props.user.email}\n                    />\n\n                    <Typography style={style.label}>Account</Typography>\n                    <TextField\n                        id=\"outlined-name\"\n                        label=\"username\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.props.user.username}\n                        fullWidth\n                    />\n                    <TextField\n                        id=\"outlined-name-2\"\n                        label=\"password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        type='password'\n                        fullWidth\n                        value={this.state.password}\n                        onChange={(e) => this.setState({password: e.target.value})}\n\n                    />\n                    <TextField\n                        id=\"outlined-name-2\"\n                        label=\"new password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        fullWidth\n                        type='password'\n                        value={this.state.new_password}\n                        onChange={(e) => this.setState({new_password: e.target.value})}\n                    />\n\n                    <Button variant=\"outline-info\" type=\"submit\" onClick={(e) => this.submitData(this.props.user.username, this.state.password, this.state.new_password)}>\n                        Update\n                    </Button>\n                </ThemeProvider>\n            </Container>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => ({\n    user : state.auth.user\n})\n\nexport default connect(mapStateToProps)(ProfileForm);","import React, { Component } from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport {TextField} from '@material-ui/core';\nimport {Button} from 'react-bootstrap';\nimport {connect} from 'react-redux';\nimport store from '../redux/store';\nimport axios from 'axios';\nimport {loadUser} from '../redux/actions/auth'\n\n\n\nconst keyActionsMap = {\n    'MOVE_LEFT': 'a',\n    'MOVE_RIGHT': 'd',\n    'MOVE_BACKWARD': 's',\n    'MOVE_FORWARD' : 'w',\n    'RELOAD': 'r',\n    'MOVEMODE2': 'v',\n    'FIREMODE': 'x'\n}\n\nconst keyActions = [\n    'k_move_left',\n    'k_move_right',\n    'k_move_backward',\n    'k_move_forward',\n    'k_reload',\n    'k_movemode2',\n    'k_firemode',\n]\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00838f'\n        },\n        type: \"dark\"\n    }\n});\nconst tokenConfig = () => {\n    const token = store.getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n    if (token) {\n        config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return config;\n};\n\nclass Index extends Component{\n    constructor(props){\n        super(props)\n        this.state = this.props.user.settings\n\n    }\n    componentDidMount(){\n        document.addEventListener('keypress', this.keyDetector, false)\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('keypress', this.keyDetector, false)\n    }\n\n    submitData = () => {\n        let settings = this.state\n        delete settings.user\n        axios.put(`http://localhost:8000/api/user/${this.props.user.id}/settings`, settings, tokenConfig())\n        .then(res => { alert('Successfully updated'); store.dispatch(loadUser())})\n        .catch(err => alert(\"Invalid fields\"))\n    }\n\n    render(){\n        return(\n            <div style={{ marginTop: 100 , paddingBottom: 100}}>\n                <ThemeProvider theme={theme}>\n                <p className='text-info'> For particular reasons we only support few settings below: </p>\n                    {\n                        keyActions.map((key, index) => (\n                        <TextField\n                            id={key}\n                            label={key}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            value={this.state[key]}\n                            onKeyPress={(e) => {\n                                for (var k in this.state){\n                                    if (this.state[k] === e.key && k !== key) {\n                                        this.setState({[k] : ''});\n                                    }\n                                };\n                                this.setState({[key] : e.key});\n                            }}\n                            fullWidth\n                        />))\n                    }\n                </ThemeProvider>\n                \n                    <Button style={{marginTop: 50}} variant=\"outline-info\" type=\"button\" onClick={() => this.submitData()} >\n                        Update\n                    </Button>\n\n            </div>\n        )\n    }\n \n}\nconst mapStateToProps = (state) => ({\n    user : state.auth.user\n})\nexport default connect(mapStateToProps)(Index);","import React, { Component } from 'react';\nimport { Row, Container, Button } from 'react-bootstrap';\nimport { withStyles, createMuiTheme } from \"@material-ui/core/styles\";\nimport { Typography, OutlinedInput } from '@material-ui/core';\nimport Slider from '@material-ui/lab/Slider';\nimport store from '../redux/store';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField'\nimport { connect } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport axios from 'axios'\nimport {loadUser} from '../redux/actions/auth'\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00838f'\n        },\n        type: \"dark\"\n    }\n});\n\nconst StyledSlider = withStyles({\n    thumb: {\n        backgroundColor: \"#00bcd4\"\n    },\n    track: {\n        backgroundColor: \"#00bcd4\",\n    },\n\n})(Slider);\n\nconst style = {\n    text: {\n        fontFamily: \"Arial\",\n        color: '#dddddd',\n        marginTop: 10,\n    },\n    label: {\n        fontWeight: 'bold',\n    },\n    slider: {\n        padding: '10px 0px',\n    }\n\n}\n\n\nconst playerClass = {\n    'hero' : \"objects/characters/pmodels/hero/hero_mp.cgf\",\n    'merc_scout' : \"objects/characters/mercenaries/merc_scout/merc_scout_mp.cgf\",\n    'merc_rear' : \"objects/characters/mercenaries/merc_rear/merc_rear_mp.cgf\",\n    'evil_worker' : \"bbjects/characters/workers/evil_worker/evil_worker_MP.cgf\",\n    'mertz' : \"objects/characters/pmodels/story_characters/mertz/mertz_mp.cgf\",\n}\n\nconst colorSkin = ['#000000','#000000','#000000','#000000','#000000','#000000','#000000','#000000','#000000']\n\nconst tokenConfig = () => {\n    const token = store.getState().auth.token;\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n    if (token) {\n        config.headers[\"Authorization\"] = `Token ${token}`;\n    }\n    return config;\n};\n\nclass Settings extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            settings : props.user.settings\n        }\n    }\n\n    submitData = () => {\n        let settings = this.state.settings\n        delete settings.user\n        axios.put(`http://localhost:8000/api/user/${this.props.user.id}/settings`, settings, tokenConfig())\n        .then(res => { alert('Successfully updated'); store.dispatch(loadUser())})\n        .catch(err => alert(\"Invalid fields\"))\n    }\n\n    render() {\n        return (\n            <Container style={{ marginTop: 80 }}>\n                <ThemeProvider theme={theme}>\n                    <Row>\n                        <TextField\n                            id=\"outlined-bare\"\n                            label='Game path'\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                        <TextField\n                            id=\"outlined-bare\"\n                            label='Player name'\n                            value={this.state.settings.ingame_name}\n                            onChange={(e, value) => this.setState({settings: { ...this.state.settings, ingame_name:e.target.value }})}\n                            margin=\"normal\"\n                            variant=\"outlined\"\n                            fullWidth\n                        />\n                        <Typography id=\"lazy-weapon\" style={style.text}>Lazy weapon</Typography>\n                        <StyledSlider\n                            style={style.slider}\n                            aria-labelledby=\"lazy-weapon\"\n                            min={0}\n                            max={1}\n                            value={this.state.settings.lazy_weapon}\n                            onChange={(e, value) => this.setState({settings: { ...this.state.settings, lazy_weapon:value }})}\n                        />\n\n                        <Typography id=\"screen-brightness\" style={style.text}>Screen brightness</Typography>\n                        <StyledSlider\n                            style={style.slider}\n                            aria-labelledby=\"screen-brightness\"\n                            min={0}\n                            max={1}\n                            value={this.state.settings.brightness}\n                            onChange={(e, value) => this.setState({settings: { ...this.state.settings, brightness:value }})}\n                        />\n\n                        <Typography id=\"graphic-quality\" style={style.text}>Graphic Quality</Typography>\n                        <StyledSlider\n                            style={style.slider}\n                            aria-labelledby=\"graphic-quality\"\n                            value={this.state.settings.screen_quality}\n                            min={0}\n                            max={3}\n                            step={1}\n                            onChange={(e, value) => this.setState({settings: { ...this.state.settings, screen_quality:value }})}\n                        />\n\n                        <Typography style={style.text}>Player class</Typography>\n                        <Select\n                            value={this.state.settings.model}\n                            onChange={(e) => {\n                                this.setState({settings: { ...this.state.settings, model:e.target.value }});\n                                }}\n                            input={\n                                <OutlinedInput name=\"model\" fullWidth id=\"outlined-age-native-simple\" />\n                            }\n                            style={{ width: '100%' }}\n                        >\n                                {\n                                    Object.keys(playerClass).map((key, index) =>\n                                    <option value={playerClass[key]}> {key}</option> )\n                                }\n                        </Select>\n\n                        <Typography id=\"skin-color\" style={style.text}>Skin color</Typography>\n                        <Select\n                            value={this.state.settings.player_skin}\n                            onChange={(val) => this.setState({settings: { ...this.state.settings, player_skin:val }})}\n                            inputProps={{\n                                name: \"skin\",\n                                id: \"demo-controlled-open-select\"\n                            }}\n                            variant='filled'\n                            style={{ width: '100%' }}\n                        >\n                            {\n                                    colorSkin.map((val, ind) =>\n                                        <MenuItem value={ind} style={{ backgroundColor: {val} }}></MenuItem>\n                                    )\n                            }\n                        </Select>\n\n                    </Row>\n\n                    <Row style={{ marginTop: 50 }}>\n                        <Button variant=\"outline-info\" type=\"button\" onClick={() => this.submitData()} >\n                            Update\n                    </Button>\n                    </Row>\n\n\n                </ThemeProvider>\n\n            </Container>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        user: state.auth.user\n    }\n)\n\nexport default connect(mapStateToProps)(Settings);","import React, { Component } from 'react';\nimport farcryLogo from '../static/farcry1.jpg'\nimport { Container, Row, Col, Image, Button, Card, Accordion, Table } from 'react-bootstrap';\nimport axios from 'axios';\n\nconst style = {\n    text: {\n        color: '#00bfa5'\n    },\n    btn_right: {\n        position: 'absolute',\n        right: 10,\n        bottom: 10,\n    },\n    game_logo: {\n        width: 200,\n        transform: 'rotateY(35deg)'\n    }\n}\n\n\nconst refreshList = () => {\n\n}\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            matches: []\n        }\n        this.getMatches()\n    }\n\n    getMatches = () => {\n        axios.get('/api/matches.list?')\n            .then(res => res.data)\n            .then(data => { this.setState({matches: data}); return data})\n            .then(data => data.map((match, i) => this.getFragsFromMatch(match.id)))\n    }\n \n    getFragsFromMatch = (match_id) => {\n        axios.get(`/api/frags.list?match_id=${match_id}`)\n            .then(res => res.data)\n            .then(data => {\n\n                this.setState(state => {\n                    const matches = state.matches.map(obj => { \n                        if (obj.id === match_id){\n                            obj.frags = data\n                            return obj\n                        }   \n                        else\n                            return obj\n                    })\n                    return matches;\n                })\n            })\n        \n        }\n    \n    getFrags = () => {\n        for (var i in this.state.matches){\n            console.log(i)\n        }\n    }\n        \n\n    render() {\n        return (\n            <Container style={{ marginTop: 50, paddingBottom: 50 }}>\n                <Row >\n                    <Col xs={4} md={4} lg={4} xl={4}>\n                        <div style={{ perspective: 1000, boxShadow: '0 4px 8px 0 #ffffff, 0 6px 20px 0 #00838f' }}>\n                            <Image src={farcryLogo} style={style.game_logo} />\n                        </div>\n                    </Col>\n                    <Col xs={8} md={8} lg={8} xl={8} style={{ backgroundColor: 'rgba(0,0,0,0.1)' }}>\n                        <p style={style.text}>Far Cry is a first-person shooter (FPS) video game with amazing graphics, developed by Crytek and published by Ubisoft. The game was released in 2004 for Microsoft Windows.\n                        The game was a huge commercial success. Ubisoft closed the online servers almost 12 years later.</p>\n                        <Button variant='outline-info' style={style.btn_right}>Play</Button>\n                    </Col>\n                </Row>\n                <hr></hr>\n                <Row>\n                    <h3 style={{ ...style.text, marginTop: 50, marginLeft: 20 }}>Recent matches</h3>\n                </Row>\n                <Row style={{ color: '#eeeeee' }}>\n                    <Col>\n                        <Accordion ActiveKey={0}>\n                            {\n                                this.state.matches.map((match, id) =>\n                                {\n                                return (\n                                    <Card style={{ backgroundColor: 'transparent' }}>\n                                    <Accordion.Toggle as={Button} variant=\"outline-light\" eventKey={id}>\n                                        Match {match.id}\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey={id}>\n\n                                        <Card.Body>\n                                            <p> start time : {match.start_time} </p>\n                                            <p> end time : {match.end_time} </p>\n                                            <Table striped bordered hover variant=\"dark\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Time</th>\n                                                        <th>killer</th>\n                                                        <th>victim</th>\n                                                        <th>weapon code</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {\n                                                        match.frags ? \n                                                        (match.frags.map((frag, i) =>\n                                                            <tr>\n                                                                <td>{frag.frag_time}</td>\n                                                                <td>{frag.killer}</td>\n                                                                <td>{frag.victim}</td>\n                                                                <td>{frag.weapon_code}</td>\n                                                            </tr>\n                                                        )) : '' \n                                                    }\n                                                </tbody>\n                                            </Table>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>)\n                                \n                            })\n                            }\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n                )\n            }\n        }\nexport default Index;","import React from 'react';\nimport { Navbar,  Button,  Row } from 'react-bootstrap';\nimport store from '../redux/store';\nimport {logout} from '../redux/actions/auth'\nimport { connect } from 'react-redux';\nimport {Typography} from '@material-ui/core';\nimport {faGamepad} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {overrideSettings} from '../scripts/index'\nimport {PythonShell} from 'python-shell'\n\n\nconst handleLogout = (e) => {\n    e.preventDefault();\n    // store.dispatch(logout());\n    // window.location.href = '/login'\n    // const ps = require('python-shell')\n      \n    // ps.PythonShell.run('~/Documents/Intek/2stTerm/FarcryOnlinePlatform/front-end/src/game-scripts/my_script.py', null, function (err) {\n\n    // });\n    const ps = require('python-shell')\n    ps.PythonShell.run('../scripts/my_script.py', null);\n\n}\nconst Navigator = (props) => {\n    return (\n        <Row>\n\n        \n        <Navbar variant='dark' fixed='top' style={{backgroundColor: '#111111'}} >\n            <Typography variant=\"h6\" style={{marginLeft: 240, color:'#00bcd4'}} >Farcry Online</Typography>\n            {\n                props.isAuthenticated &&\n                <Button  className='ml-auto' variant=\"outline-info\" onClick={handleLogout} style={{borderWidth: 0, borderRadius: '45%'}}>\n                    <FontAwesomeIcon icon={faGamepad}/>\n                </Button>\n            }\n        </Navbar>\n        </Row>\n    )\n}\n\nconst mapStateToProps = (state) => (\n    {\n        isAuthenticated : state.auth.isAuthenticated\n    }\n)\n\nexport default connect(mapStateToProps)(Navigator);","import {SELECT_TAB} from '../actions/types';\n\nexport const selectTab = (tabname) => {\n    return{\n        type: SELECT_TAB,\n        payload:{\n            selected : tabname\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport {Image, Nav} from 'react-bootstrap'\nimport logo from '../static/logo4.png'\nimport { withStyles } from '@material-ui/core/styles';\nimport {Drawer} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { faHome, faUser, faCog, faKeyboard, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport store from '../redux/store';\nimport {selectTab} from '../redux/actions/tabs';\nimport {Button} from 'react-bootstrap';\nimport {logout} from '../redux/actions/auth'\n\n\n\nconst drawerWidth = 240;\nconst tabs = ['Home', 'Profile', 'Setting', 'Keyboard']\nconst tabIcons = [faHome, faUser, faCog, faKeyboard ]\n\nconst useStyles = {\n    root: {\n        display: 'flex',\n    },\n    title:{\n        height: 100,\n        backgroundColor: '#1a1a1a'\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    item:{\n        color: \"#bbbbbb\"\n    },\n    drawer: {\n        width: drawerWidth,\n    },\n    selected: {\n        color: \"#00bcd4\"\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        backgroundColor: '#1a1a1a'\n    }\n}\nconst handleLogout = (e) => {\n    e.preventDefault();\n    store.dispatch(logout());\n    window.location.href = '/login'\n}\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: 'Home'\n        }\n        store.dispatch(selectTab('Home'))\n    }\n    render() {\n        const { classes } = this.props;\n        return (\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                anchor=\"left\"\n            >\n                <div className={classes.title}>\n                    <Nav.Link href='/'>\n                        <Image src={logo} fluid/>\n                    </Nav.Link>\n                </div> \n                <Divider />\n                    <List>\n                        {tabs.map((text, index) => (\n                            <ListItem button key={text}\n                                classes={{\n                                    selected: classes.selected,\n                                    root: classes.item\n                                }}\n                                selected={text === this.state.selected}\n                                onClick={() => {\n                                    this.setState({ selected: text });\n                                    store.dispatch(selectTab(text))\n                            }}\n                            >   \n                                <ListItemText><FontAwesomeIcon icon={tabIcons[index]}/>    {text}</ListItemText> \n                            </ListItem>\n                        ))}\n                    </List>\n                <Divider />\n                <div style={{display: 'flex', alignItems:'center', justifyContent:'center'}}>\n                    <Button style={{position: \"absolute\", bottom: 0, border: 0, width:'100%'}} variant='outline-info'onClick={handleLogout} > <FontAwesomeIcon icon={faSignOutAlt}/>Logout</Button>\n                </div>\n            </Drawer>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Index);","import React from 'react';\nimport {  Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport Profile from '../components/Profile';\nimport Keyboard from '../components/Keymap'\nimport Setting from '../components/Setting';\nimport Home from '../components/Home';\nimport Navigator from '../components/Navigator';\nimport SideBar from '../components/Sidebar';\nimport {Redirect} from 'react-router-dom'\n\n\n\n\nconst Index = (props) => {\n    return(\n        !props.isAuthenticated ?\n        <Redirect to='/login'></Redirect> \n        :\n        <div>\n            <Col xs={4} md={4} xl={4} sm={4} lg={4} >\n                <SideBar></SideBar>\n            </Col>\n            <Col xs={8} md={8} xl={8} sm={8} lg={8} style={{marginLeft: 240}}>\n                <Navigator></Navigator>\n                { props.selected === 'Home' && <Home></Home>}\n                { props.selected === 'Profile' && <Profile></Profile> }\n                { props.selected === 'Setting' && <Setting></Setting> }\n                { props.selected === 'Keyboard' && <Keyboard></Keyboard> }\n            </Col>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => (\n    {\n        selected : state.tabs.selected,\n        isAuthenticated: state.auth.isAuthenticated,\n\n    }\n)\n\nexport default connect(mapStateToProps)(Index);","import React, { Component } from 'react';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport {TextField, createMuiTheme}from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../redux/actions/auth';\nimport store from '../redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#00838f'\n      },\n      type: \"dark\"\n    }\n  });\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\"\n        }\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    render() {\n        return (\n            this.props.isAuthenticated ?\n                <Redirect to='/'></Redirect>\n                :\n                <div>\n                    <Container style={{ width: \"80%\", maxWidth: 500 }} >\n                        <h1 className='text-center pt-5' style={{ color: '#eeeeee' }}> Login </h1>\n                        <ThemeProvider theme={theme}>\n                        <Row>\n                            <TextField\n                                error={this.props.errors['username'] || this.props.errors['authenticate_error'] ? true : false}\n                                helperText={this.props.errors['username'] ? this.props.errors['username'] : \"\"}\n                                label=\"Username\"\n                                type=\"username\"\n                                name=\"username\"\n                                autoComplete=\"email\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                value={this.state.username}\n                                onChange={this.onChange}\n                                fullWidth\n                            />\n                            <TextField\n                                error={this.props.errors['password'] || this.props.errors['authenticate_error'] ? true : false}\n                                helperText={this.props.errors['password'] ? this.props.errors['password'] : \"\"}\n                                id=\"outlined-password-input\"\n                                label=\"Password\"\n                                type=\"password\"\n                                name='password'\n                                autoComplete=\"current-password\"\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                value={this.state.password}\n                                onChange={this.onChange}\n                                fullWidth\n                            />\n                        </Row>\n\n                        <Row >\n                            <Button type='button' variant=\"info\" onClick={(e) => {\n                                store.dispatch(login(this.state.username, this.state.password));}}\n                                block> Sign in </Button>\n                        </Row>\n                        <p className='text-center mb-1 text-secondary'>or</p>\n                        <Row >\n                            <Button href='/signup' type='button' variant=\"success\" block> Register </Button>\n                        </Row>\n                        </ThemeProvider>            \n                    </Container>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        isAuthenticated: state.auth.isAuthenticated,\n        errors: state.error.msg\n    }\n)\nexport default connect(mapStateToProps)(Index);","import React, {Component} from 'react';\nimport { Container, Row, Button, Alert } from 'react-bootstrap';\nimport {TextField, createMuiTheme} from '@material-ui/core';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\nimport {register} from '../redux/actions/auth';\nimport store from '../redux/store';\nimport { ThemeProvider } from '@material-ui/styles';\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#00838f'\n      },\n      type: \"dark\"\n    }\n});\n\nclass Index extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            alerts : \"Invalid form\",\n            username : \"\",\n            email: \"\",\n            password : \"\",\n            confirm_password : \"\",\n        }\n    }\n\n\n    handleRegister = (username, email, password, confirm_password) => {\n        if (password === confirm_password){\n            store.dispatch(register(username, email, password));\n        }\n\n    }\n\n    onChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render(){\n        return( \n            this.props.isAuthenticated ?\n            <Redirect to='/'></Redirect> \n            :\n\n            <Container style={{width:\"80%\", maxWidth: 500 }} >\n                <ThemeProvider theme={theme}>\n                <h1 className='text-center pt-5' style={{color: '#eeeeee'}}> Register </h1>\n                <Row>\n                <Alert variant=\"danger\" show={false} dismissible style={{width: '100%', height: 50}} closeLabel='X' onClose={() => this.setState({showAlert: false})}>\n                    <p>{this.state.alerts}</p>\n                </Alert>\n\n                </Row>\n                <Row>\n                    <TextField\n                        label= \"Username\"\n                        error =  { this.props.errors['username'] ? true : false }\n                        helperText = { this.props.errors['username'] ? this.props.errors['username'] : \"\" }\n                        type=\"username\"\n                        name=\"username\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.username}\n                        onChange={this.onChange}\n                        fullWidth\n                    />\n                    <TextField\n                        error =  { this.props.errors['email'] ? true : false }\n                        helperText = { this.props.errors['email'] ? this.props.errors['email'] : \"\" }\n                        label=\"Email\"\n                        type=\"email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.email}\n                        onChange={this.onChange}\n                        fullWidth\n                    />\n                    <TextField\n                        error =  { this.props.errors['password'] ? true : false }\n                        helperText = { this.props.errors['password'] ? this.props.errors['password'] : \"\" }\n                        id=\"outlined-password-input\"\n                        label=\"Password\"\n                        type=\"password\"\n                        name='password'\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.password}\n                        onChange={this.onChange}\n                        fullWidth\n                    />\n                    <TextField\n                        error = {this.state.confirm_password !== this.state.password}\n                        helperText = {this.state.confirm_password !== this.state.password ? 'Passwords do not match!':''}\n                        id=\"outlined-password-input\"\n                        label=\"Confirm password\"\n                        type=\"password\"\n                        name='confirm_password'\n                        autoComplete=\"current-password\"\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={this.state.confirm_password}\n                        onChange={this.onChange}\n                        fullWidth\n                    />\n                </Row>\n\n                <Row >\n                    <Button type='button' variant=\"outline-info\" onClick={(e) => { this.handleRegister(\n                        this.state.username,\n                        this.state.email,\n                        this.state.password,\n                        this.state.confirm_password\n                    )}}\n                        block> Register </Button>\n\n                </Row>\n                <p className='text-center mb-1 text-secondary'>Already have an account?</p>\n                    <Row >\n                        <Button href='/login' type='button' variant=\"outline-success\" block> Sign in </Button>\n                    </Row>\n\n                </ThemeProvider>   \n            </Container>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => (\n    {\n        isAuthenticated: state.auth.isAuthenticated,\n        errors: state.error.msg\n    }\n)\nexport default connect(mapStateToProps)(Index);","import React, { Component } from 'react';\nimport Main from './views/Main'\nimport Login from './views/Login'\nimport Signup from './views/Signup'\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store from './redux/store';\nimport { loadUser } from './redux/actions/auth'\n\n\n\n\nclass App extends Component {\n    componentDidMount = () => {\n        store.dispatch(loadUser())\n    }\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/login\" component={Login} />\n                    <Route exact path=\"/\" component={Main} />\n                    <Route path='/signup' component={Signup} />\n                </Switch>\n            </Router>\n        );\n    }\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/Navigator.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}>\n                    <App></App>\n                </Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}